// Code generated by "stringer -type=binaryOperator"; DO NOT EDIT.

package refine

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[binaryMultiply-0]
	_ = x[binaryDivide-1]
	_ = x[binaryMinus-2]
	_ = x[binaryPlus-3]
	_ = x[binaryLeftShift-4]
	_ = x[binaryRightShift-5]
	_ = x[binaryEqual-6]
	_ = x[binaryNotEqual-7]
	_ = x[binaryLessThan-8]
	_ = x[binaryLessThanOrEqual-9]
	_ = x[binaryGreaterThan-10]
	_ = x[binaryGreaterThanOrEqual-11]
	_ = x[binaryLogicalOr-12]
	_ = x[binaryLogicalAnd-13]
}

const _binaryOperator_name = "binaryMultiplybinaryDividebinaryMinusbinaryPlusbinaryLeftShiftbinaryRightShiftbinaryEqualbinaryNotEqualbinaryLessThanbinaryLessThanOrEqualbinaryGreaterThanbinaryGreaterThanOrEqualbinaryLogicalOrbinaryLogicalAnd"

var _binaryOperator_index = [...]uint8{0, 14, 26, 37, 47, 62, 78, 89, 103, 117, 138, 155, 179, 194, 210}

func (i binaryOperator) String() string {
	if i < 0 || i >= binaryOperator(len(_binaryOperator_index)-1) {
		return "binaryOperator(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _binaryOperator_name[_binaryOperator_index[i]:_binaryOperator_index[i+1]]
}
